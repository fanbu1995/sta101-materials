# DO NOT ALTER CODE IN THIS CHUNK
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
library(dplyr)
library(ggplot2)
library(mosaic)
load(url("https://stat.duke.edu/~mc301/data/ames.RData"))
set.seed(2132016)
### Take a sample of size 60 and save to "samp"
n <- 60
samp <- sample_n(ames, n)
### Observe the distn of house sizes of the sample with a histogram
# hist(samp$area)
qplot(data = samp, x = area, binwidth = 250)
### Summarize the distn
samp %>%
summarise(xbar = mean(area), samp_med = median(area),
stdev = sd(area), samp_iqr = IQR(area),
samp_min = min(area), samp_max = max(area),
samp_q1 = quantile(area, 0.25),  # first quartile, 25th percentile
samp_q3 = quantile(area, 0.75))  # third quartile, 75th percentile
### Calculate the critical value for the 95% CI
z_star_95 <- qnorm(0.975) # 97.5th percentile for 95% CI
# z_star_95
### Calculate the 95% CI of the average house size
samp %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
### Calculate the population mean
params <- ames %>%
summarise(mu = mean(area))
params
### Draw 50 samples from popn and estimate 95% CI of avg house size for each
ci <- do(50) * ames %>%
sample_n(n) %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
### Observe first 5 intervals
# ci %>%
#   slice(1:5)
### Create flag to check if interval captures popn mean mu
ci <- ci %>%
mutate(capture_mu = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
### Calculate proportion that capture the mean
prop.table(table(ci$capture_mu))
### Rearrange the df ci to have one interval per row
ci_data <- data.frame(ci_id = c(1:50, 1:50),
ci_bounds = c(ci$lower, ci$upper),
capture_mu = c(ci$capture, ci$capture))
ci
# DO NOT ALTER CODE IN THIS CHUNK
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
library(dplyr)
library(ggplot2)
library(mosaic)
load(url("https://stat.duke.edu/~mc301/data/ames.RData"))
set.seed(2132016)
### Take a sample of size 60 and save to "samp"
n <- 60
samp <- sample_n(ames, n)
### Observe the distn of house sizes of the sample with a histogram
# hist(samp$area)
qplot(data = samp, x = area, binwidth = 250)
### Summarize the distn
samp %>%
summarise(xbar = mean(area), samp_med = median(area),
stdev = sd(area), samp_iqr = IQR(area),
samp_min = min(area), samp_max = max(area),
samp_q1 = quantile(area, 0.25),  # first quartile, 25th percentile
samp_q3 = quantile(area, 0.75))  # third quartile, 75th percentile
load(url("http://www.openintro.org/stat/data/evals.RData"))
str(evals)
library(GGally)
